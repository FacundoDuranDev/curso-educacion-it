services:
  metastore:
    image: postgres:11
    hostname: metastore
    environment:
      POSTGRES_PASSWORD: jupyter
    ports:
      - "5432:5432"
    volumes:
      - metastore:/var/lib/postgresql/data
      - ./metastore/ddl/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.1
    extra_hosts:
      - "master:172.28.1.2"
      - "worker1:172.28.1.3"
      - "worker2:172.28.1.4"
      - "history:172.28.1.5"
    # Límites de recursos balanceados (3GB total)
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

  master:
    image: hadoop-hive-spark-master
    hostname: master
    depends_on:
      - metastore
    environment:
      SPARK_MASTER_HOST: 172.28.1.2
      SPARK_LOCAL_IP: 172.28.1.2
      SPARK_LOCAL_HOSTNAME: master
      # Variables de optimización JVM (configuración balanceada)
      SPARK_DAEMON_MEMORY: 384m
    ports:
      - "4040:4040"
      - "8020:8020"
      - "8080:8080"
      - "8088:8088"
      - "9870:9870"
      - "10000:10000"
    volumes:
      - namenode:/opt/hadoop/dfs/name
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.2
    extra_hosts:
      - "metastore:172.28.1.1"
      - "worker1:172.28.1.3"
      - "worker2:172.28.1.4"
      - "history:172.28.1.5"
    # Límites de recursos AUMENTADOS para master (necesita correr múltiples servicios)
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '1.0'

  worker1:
    image: hadoop-hive-spark-worker
    hostname: worker1
    depends_on:
      - master
    environment:
      SPARK_MASTER_HOST: 172.28.1.2
      SPARK_LOCAL_IP: 172.28.1.3
      SPARK_LOCAL_HOSTNAME: worker1
      # Variables de optimización JVM (memoria EXTREMA para executors Spark)
      SPARK_WORKER_MEMORY: 2g
      SPARK_WORKER_CORES: 2
      SPARK_DAEMON_MEMORY: 512m
    ports:
      - "8042:8042"
      - "8081:8081"
      - "9864:9864"
    volumes:
      - datanode1:/opt/hadoop/dfs/data
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.3
    extra_hosts:
      - "metastore:172.28.1.1"
      - "master:172.28.1.2"
      - "worker2:172.28.1.4"
      - "history:172.28.1.5"
    # Límites de recursos EXTREMOS para cluster Spark (garantizar funcionamiento)
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  worker2:
    image: hadoop-hive-spark-worker
    hostname: worker2
    depends_on:
      - master
    environment:
      SPARK_MASTER_HOST: 172.28.1.2
      SPARK_LOCAL_IP: 172.28.1.4
      SPARK_LOCAL_HOSTNAME: worker2
      # Variables de optimización JVM (memoria EXTREMA para executors Spark)
      SPARK_WORKER_MEMORY: 2g
      SPARK_WORKER_CORES: 2
      SPARK_DAEMON_MEMORY: 512m
    ports:
      - "8043:8042"
      - "8082:8081"
      - "9865:9864"
    volumes:
      - datanode2:/opt/hadoop/dfs/data
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.4
    extra_hosts:
      - "metastore:172.28.1.1"
      - "master:172.28.1.2"
      - "worker1:172.28.1.3"
      - "history:172.28.1.5"
    # Límites de recursos EXTREMOS para cluster Spark (garantizar funcionamiento)
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  history:
    image: hadoop-hive-spark-history
    hostname: history
    depends_on:
      - master
      - worker1
      - worker2
    environment:
      SPARK_MASTER_HOST: 172.28.1.2
      SPARK_LOCAL_IP: 172.28.1.5
      SPARK_LOCAL_HOSTNAME: history
      # Variables de optimización JVM (configuración balanceada)
      SPARK_DAEMON_MEMORY: 192m
    ports:
      - "18080:18080"
      - "19888:19888"
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.5
    extra_hosts:
      - "metastore:172.28.1.1"
      - "master:172.28.1.2"
      - "worker1:172.28.1.3"
      - "worker2:172.28.1.4"
    # Límites de recursos balanceados (3GB total)
    deploy:
      resources:
        limits:
          memory: 384M
          cpus: '0.5'
        reservations:
          memory: 192M
          cpus: '0.25'

  jupyter:
    image: hadoop-hive-spark-jupyter
    hostname: jupyter
    environment:
      SPARK_MASTER_HOST: 172.28.1.2
      SPARK_LOCAL_IP: 172.28.1.6
      SPARK_LOCAL_HOSTNAME: jupyter
      # Variables de optimización JVM (configuración balanceada)
      PYSPARK_DRIVER_PYTHON_OPTS: "-Xmx192m -Xms96m"
    depends_on:
      - master
      - worker1
      - worker2
    ports:
      - "8888:8888"
    volumes:
      - ./jupyter/.cache:/home/jupyter/.cache
      - ./jupyter/notebook:/home/jupyter/notebook
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.6
    extra_hosts:
      - "metastore:172.28.1.1"
      - "master:172.28.1.2"
      - "worker1:172.28.1.3"
      - "worker2:172.28.1.4"
      - "history:172.28.1.5"
    # Límites de recursos balanceados (3GB total)
    deploy:
      resources:
        limits:
          memory: 384M
          cpus: '0.5'
        reservations:
          memory: 192M
          cpus: '0.25'

  jupyterlab:
    image: hadoop-hive-spark-jupyterlab
    hostname: jupyterlab
    environment:
      SPARK_MASTER_HOST: 172.28.1.2
      SPARK_LOCAL_IP: 172.28.1.7
      SPARK_LOCAL_HOSTNAME: jupyterlab
      # Variables de optimización JVM (memoria MÁXIMA para Spark driver)
      PYSPARK_DRIVER_PYTHON_OPTS: "-Xmx2g -Xms1g"
    depends_on:
      - master
      - worker1
      - worker2
      - metastore
    ports:
      - "8890:8888"
      - "4041:4040"
    volumes:
      - ./jupyter/notebook:/home/jupyter/notebook
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.7
    extra_hosts:
      - "metastore:172.28.1.1"
      - "master:172.28.1.2"
      - "worker1:172.28.1.3"
      - "worker2:172.28.1.4"
      - "history:172.28.1.5"
      - "jupyter:172.28.1.6"
      - "jupyterlab:172.28.1.7"
    # Límites de recursos SIGNIFICATIVAMENTE aumentados para Spark driver
    mem_limit: 3g
    memswap_limit: 3g
    cpus: 2.0
    shm_size: 1g

  hbase:
    image: dajobe/hbase
    hostname: hbase
    depends_on:
      - master
    environment:
      HBASE_CONF_hbase_rootdir: hdfs://master:8020/hbase
      HBASE_CONF_hbase_cluster_distributed: "false"
      HBASE_CONF_hbase_zookeeper_quorum: hbase
      HBASE_CONF_hbase_master: hbase:16000
      HBASE_CONF_hbase_master_hostname: hbase
      HBASE_CONF_hbase_master_port: "16000"
      HBASE_CONF_hbase_master_info_port: "16010"
      HBASE_CONF_hbase_regionserver_port: "16020"
      HBASE_CONF_hbase_regionserver_info_port: "16030"
      # Configuración JVM aumentada para mejor funcionamiento
      HBASE_HEAPSIZE: "512m"
      HBASE_OPTS: "-XX:+UseConcMarkSweepGC -XX:+CMSIncrementalMode -XX:+DisableExplicitGC"
    ports:
      - "16010:16010"  # HBase Master Web UI
      - "16020:16020"  # HBase RegionServer Web UI
      - "16030:16030"  # HBase RegionServer Info
      - "2181:2181"    # Zookeeper
      - "16000:16000"  # HBase Master
      - "9090:9090"    # HBase Thrift
    volumes:
      - hbase_data:/data/hbase
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.8
    extra_hosts:
      - "metastore:172.28.1.1"
      - "master:172.28.1.2"
      - "worker1:172.28.1.3"
      - "worker2:172.28.1.4"
      - "history:172.28.1.5"
      - "jupyter:172.28.1.6"
      - "jupyterlab:172.28.1.7"
    # Límites de recursos aumentados para HBase
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
        reservations:
          memory: 768M
          cpus: '0.75'
    # Configuraciones adicionales para mejor rendimiento
    ulimits:
      memlock: -1
      nofile:
        soft: 65536
        hard: 65536

  cassandra:
    image: cassandra:4.1
    hostname: cassandra
    environment:
      CASSANDRA_CLUSTER_NAME: 'EducacionIT Cluster'
      CASSANDRA_DC: 'datacenter1'
      CASSANDRA_RACK: 'rack1'
      CASSANDRA_ENDPOINT_SNITCH: 'GossipingPropertyFileSnitch'
      CASSANDRA_NUM_TOKENS: 128
      # Variables de optimización JVM
      MAX_HEAP_SIZE: '384m'
      HEAP_NEWSIZE: '96m'
      JVM_OPTS: '-Xss256k'
    ports:
      - "9042:9042"    # CQL Native Transport
      - "7000:7000"    # Inter-node cluster communication
      - "7001:7001"    # SSL inter-node cluster communication
      - "7199:7199"    # JMX monitoring
      - "9160:9160"    # Thrift client API
    volumes:
      - cassandra_data:/var/lib/cassandra
      - cassandra_logs:/var/log/cassandra
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.9
    extra_hosts:
      - "metastore:172.28.1.1"
      - "master:172.28.1.2"
      - "worker1:172.28.1.3"
      - "worker2:172.28.1.4"
      - "history:172.28.1.5"
      - "jupyter:172.28.1.6"
      - "jupyterlab:172.28.1.7"
      - "hbase:172.28.1.8"
    # Límites de recursos balanceados para Cassandra
    deploy:
      resources:
        limits:
          memory: 640M
          cpus: '0.75'
        reservations:
          memory: 320M
          cpus: '0.5'


volumes:
  namenode:
  namesecondary:
  datanode1:
  datanode2:
  metastore:
  hbase_data:
  hbase_logs:
  cassandra_data:
  cassandra_logs:

networks:
  sparknet:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16